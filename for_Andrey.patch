Subject: [PATCH] for Andrey
---
Index: src/app/exchange-rate.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/exchange-rate.service.ts b/src/app/exchange-rate.service.ts
--- a/src/app/exchange-rate.service.ts	(revision cf44a6e7f92c3327c79060893b62063b6a5614b1)
+++ b/src/app/exchange-rate.service.ts	(date 1697711082455)
@@ -1,3 +1,4 @@
+import { Observable, of, share, tap, finalize } from 'rxjs';
 import { Injectable } from '@angular/core';
 import { HttpClient } from '@angular/common/http';
 import { environment } from 'src/environments/environment';
@@ -11,20 +12,27 @@
 })
 export class ExchangeRateService{
   private _rates: Rates = {};
+  private cachedObservable: Observable<any> | null = null;
   constructor(private http: HttpClient) { }
 
-
-  public get rates() {
+  getRates() {
     const apiUrl = `http://data.fixer.io/api/latest?access_key=${environment.apiKey}`;
+    let observable: Observable<any>;
 
-    if (!Object.keys(this._rates).length) {
-      this.http.get(apiUrl).subscribe((data: any) => {
-        this._rates = data.rates
-      });
+    if (Object.keys(this._rates).length) {
+      observable = of(this._rates);
+    }  else if (this.cachedObservable) {
+      observable = this.cachedObservable;
+    } else {
+      this.cachedObservable = this.http.get<any>(apiUrl)
+        .pipe(
+          tap(data => this._rates = data),
+          share(),
+          finalize(() => this.cachedObservable = null)
+        );
+      observable = this.cachedObservable;
     }
 
-    return this._rates
+    return observable;
   }
-
-
 }
Index: src/app/home/home.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/home/home.component.ts b/src/app/home/home.component.ts
--- a/src/app/home/home.component.ts	(revision cf44a6e7f92c3327c79060893b62063b6a5614b1)
+++ b/src/app/home/home.component.ts	(date 1697711138820)
@@ -22,20 +22,26 @@
   constructor(private exchangeRateService: ExchangeRateService) { }
 
   ngOnInit(): void {
-    this.rates = this.exchangeRateService.rates;
+    this.exchangeRateService.getRates().subscribe((data: any) => {
+      this.rates = data.rates;
+      this.updateCurrentRate();
+    });
+  }
+
+  updateCurrentRate () {
     this.currentRate = parseFloat((this.rates[this.currencyTo] / this.rates[this.currencyFrom]).toFixed(5));
   }
 
   convertCurrency(conversionDirection: ConversionDirection) {
     if (conversionDirection === ConversionDirection.FROM) {
-      this.amountTo = this.amountFrom * this.rates[this.currencyTo] / this.rates[this.currencyFrom];          
+      this.amountTo = this.amountFrom * this.rates[this.currencyTo] / this.rates[this.currencyFrom];
     } else if (conversionDirection === ConversionDirection.TO) {
       this.amountFrom = this.amountTo * this.rates[this.currencyFrom] / this.rates[this.currencyTo];
     }
-    this.currentRate = parseFloat((this.rates[this.currencyTo] / this.rates[this.currencyFrom]).toFixed(5));
+    this.updateCurrentRate();
   }
 
-  exchangeCurrencies() {
+  toggleCurrencies() {
     const tempCurrency = this.currencyFrom;
     const tempAmount = this.amountFrom;
 
@@ -43,6 +49,6 @@
     this.currencyTo = tempCurrency;
     this.amountFrom = this.amountTo;
     this.amountTo = tempAmount;
-    this.currentRate = parseFloat((this.rates[this.currencyTo] / this.rates[this.currencyFrom]).toFixed(5));
+    this.updateCurrentRate();
   }
 }
Index: src/app/home/home.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/home/home.component.html b/src/app/home/home.component.html
--- a/src/app/home/home.component.html	(revision cf44a6e7f92c3327c79060893b62063b6a5614b1)
+++ b/src/app/home/home.component.html	(date 1697711138816)
@@ -1,5 +1,4 @@
 <div class="home">
-  
     <div class="amount">
         <div class="money">
             <h1>From</h1>
@@ -8,13 +7,11 @@
                 <option *ngFor="let rate of rates | keyvalue" [value]="rate.key">{{ rate.key }}</option>
             </select>
         </div>
-
-        <div class="exchange" (click)="exchangeCurrencies()">
+        <div class="exchange" (click)="toggleCurrencies()">
             <svg viewBox="0 0 24 24" fill="none">
                 <path d="M7.96967 12.5303C8.26256 12.8232 8.73744 12.8232 9.03033 12.5303C9.32322 12.2374 9.32322 11.7626 9.03033 11.4697L7.96967 12.5303ZM5.53033 7.96967C5.23744 7.67678 4.76256 7.67678 4.46967 7.96967C4.17678 8.26256 4.17678 8.73744 4.46967 9.03033L5.53033 7.96967ZM5 7.75C4.58579 7.75 4.25 8.08579 4.25 8.5C4.25 8.91421 4.58579 9.25 5 9.25V7.75ZM19 9.25C19.4142 9.25 19.75 8.91421 19.75 8.5C19.75 8.08579 19.4142 7.75 19 7.75V9.25ZM4.46967 7.96967C4.17678 8.26256 4.17678 8.73744 4.46967 9.03033C4.76256 9.32322 5.23744 9.32322 5.53033 9.03033L4.46967 7.96967ZM9.03033 5.53033C9.32322 5.23744 9.32322 4.76256 9.03033 4.46967C8.73744 4.17678 8.26256 4.17678 7.96967 4.46967L9.03033 5.53033ZM16.0303 11.4697C15.7374 11.1768 15.2626 11.1768 14.9697 11.4697C14.6768 11.7626 14.6768 12.2374 14.9697 12.5303L16.0303 11.4697ZM18.4697 16.0303C18.7626 16.3232 19.2374 16.3232 19.5303 16.0303C19.8232 15.7374 19.8232 15.2626 19.5303 14.9697L18.4697 16.0303ZM19 16.25C19.4142 16.25 19.75 15.9142 19.75 15.5C19.75 15.0858 19.4142 14.75 19 14.75V16.25ZM5 14.75C4.58579 14.75 4.25 15.0858 4.25 15.5C4.25 15.9142 4.58579 16.25 5 16.25V14.75ZM19.5303 16.0303C19.8232 15.7374 19.8232 15.2626 19.5303 14.9697C19.2374 14.6768 18.7626 14.6768 18.4697 14.9697L19.5303 16.0303ZM14.9697 18.4697C14.6768 18.7626 14.6768 19.2374 14.9697 19.5303C15.2626 19.8232 15.7374 19.8232 16.0303 19.5303L14.9697 18.4697ZM9.03033 11.4697L5.53033 7.96967L4.46967 9.03033L7.96967 12.5303L9.03033 11.4697ZM5 9.25H19V7.75H5V9.25ZM5.53033 9.03033L9.03033 5.53033L7.96967 4.46967L4.46967 7.96967L5.53033 9.03033ZM14.9697 12.5303L18.4697 16.0303L19.5303 14.9697L16.0303 11.4697L14.9697 12.5303ZM19 14.75H5V16.25H19V14.75ZM18.4697 14.9697L14.9697 18.4697L16.0303 19.5303L19.5303 16.0303L18.4697 14.9697Z" fill="#000000"/>
             </svg>
         </div>
-        
         <div class="money">
             <h1>To</h1>
             <input [(ngModel)]="amountTo" (ngModelChange)="convertCurrency(1)" type="number" placeholder="Amount">
@@ -24,5 +21,4 @@
         </div>
     </div>
     <h1>1 {{currencyFrom}} = <span [style.color]="'green'">{{currentRate}}</span> {{currencyTo}}</h1>
-  
 </div>
Index: src/app/header/header.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/header/header.component.ts b/src/app/header/header.component.ts
--- a/src/app/header/header.component.ts	(revision cf44a6e7f92c3327c79060893b62063b6a5614b1)
+++ b/src/app/header/header.component.ts	(date 1697710426201)
@@ -13,7 +13,9 @@
   constructor(private exchangeRateService: ExchangeRateService) { }
 
   ngOnInit(): void {
-    this.usdToUahRate = parseFloat((this.exchangeRateService.rates['UAH'] / this.exchangeRateService.rates['USD']).toFixed(3));
-    this.eurToUahRate = parseFloat(this.exchangeRateService.rates['UAH'].toFixed(3));
+    this.exchangeRateService.getRates().subscribe(({ rates }) => {
+      this.usdToUahRate = parseFloat((rates['UAH'] / rates['USD']).toFixed(3));
+      this.eurToUahRate = parseFloat(rates['UAH'].toFixed(3));
+    })
   }
 }
Index: src/environments/environment.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/environments/environment.ts b/src/environments/environment.ts
--- a/src/environments/environment.ts	(revision cf44a6e7f92c3327c79060893b62063b6a5614b1)
+++ b/src/environments/environment.ts	(date 1697706847763)
@@ -1,3 +1,3 @@
 export const environment = {
-    apiKey: '26efe44f7a22cf1c5b3087ddfecd43fa',
+    apiKey: '3c235dac121a09157a83fb1ac83c7fe7',
 };
Index: src/environments/environment.development.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/environments/environment.development.ts b/src/environments/environment.development.ts
--- a/src/environments/environment.development.ts	(revision cf44a6e7f92c3327c79060893b62063b6a5614b1)
+++ b/src/environments/environment.development.ts	(date 1697706865602)
@@ -1,3 +1,3 @@
 export const environment = {
-    apiKey: '26efe44f7a22cf1c5b3087ddfecd43fa',
+    apiKey: '3c235dac121a09157a83fb1ac83c7fe7',
 };
